<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>553</x>
      <y>1302</y>
      <w>133</w>
      <h>301</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
FestoProcessActuators
--
+ driveRight()*
+ driveLeft()*
+ driveSlowRight()*
+ driveSlowLeft()*
+ driveStop()*
+ openJunction()*
+ closeJunction()*
+ lightGreenOn()*
+ lightGreenOff()*
+ lightYellowOn()*
+ lightYellowOff()*
+ lightRedOn()*
+ lightRedOff()*
+ turnLEDStartOn()*
+ turnLEDStartOff()*
+ turnLEDResetOn()*
+ turnLEDResetOff()*
+ turnLEDQ1On()*
+ turnLEDQ1Off()*
+ turnLEDQ2On()*
+ turnLEDQ2Off()*
+ turnAllOff()*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>189</y>
      <w>147</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
FSMFactory
--
- counter: PartCounter*
--
+ FSMFactory()
+ ~FSMFactory()
*createFSM() : FSM
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>392</x>
      <y>301</y>
      <w>266</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
FSM
--
- currentState: fsm_states
- process: FestoProcessAccess*
- plugin: Plugin*
- defectDetector : DefectDetector*
--
+ FSM(process: FestoProcessAccess*, plugin: Plugin*)
+ ~FSM()
+ eval()
- evalEvents()
- evalState()
- blinkGreen()
- blinkRed()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>287</x>
      <y>1302</y>
      <w>252</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
FestoProcessSensors
--
+ isItemAtBeginning()* bool
+ isItemAtHightSensor()* bool
+ isItemAtMetalDetector()* bool
+ isMetalDetected()* bool
+ isJunctionOpen()* bool
+ isItemAtSlide()* bool
+ hasItemPassedSlide()* bool
+ isItemAtEnd()* bool
+ isButtonStartPressed()* bool
+ isButtonStartPositiveEdge()* bool
+ isButtonStartNegativeEdge()* bool
+ isButtonStopPressed()* bool
+ isButtonResetPressed()* bool
+ isButtonEmergencyActive()* bool
+ getHight()* unsigned short
+ timeCounter1s()* time_t</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>693</x>
      <y>1302</y>
      <w>287</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;           
FestoProcessImage
--
+ updateProcessImage()* void
+ applyOutputToProcess()* void
+ isBitSet(bitMask: unsigned short)* unsigned char
+ isBitPosEdge(bitMask: unsigned short)* unsigned char
+ isBitNegEdge(bitMask: unsigned short)* unsigned char
+ setBitInOutput(bitMask: unsigned short)* void
+ clearBitInOutput(bitMask: unsigned short)* void
+ hight()* unsigned short
+ resetOutputs()* void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>742</x>
      <y>378</y>
      <w>112</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;        
Plugin  
--
+ evalCycle()*
+ result()* bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>686</x>
      <y>490</y>
      <w>301</w>
      <h>231</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
FestoMiniLab1008ProcessImage  
--
- process_image: unsigned short       
- process_image_old: unsigned short   
- process_image_change: unsigned short
- output_image: unsigned short        
- height_analogue_value: unsigned short
--
+ FestoMiniLab1008ProcessImage()      
+ ~FestoMiniLab1008ProcessImage()     
+ updateProcessImage(): void          
+ applyOutputToProcess(): void        
+ isBitSet(bitMask: unsigned short): unsigned char 
+ isBitPosEdge(bitMask: unsigned short): unsigned char 
+ isBitNegEdge(bitMask: unsigned short): unsigned char 
+ setBitInOutput(bitMask: unsigned short): void 
+ clearBitInOutput(bitMask: unsigned short): void 
+ resetOutputs(): void                
+ hight(): unsigned short             
- initProcessImageLayer(): void       </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>161</y>
      <w>175</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=.
Provider = Anbieter
Consumer = Nutzer 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>217</x>
      <y>7</y>
      <w>77</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.
Anbieter
Provider</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>322</x>
      <y>0</y>
      <w>77</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.
Nutzer
Consumer</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>266</x>
      <y>70</y>
      <w>77</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.
Interface</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>28</y>
      <w>49</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>50.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>308</x>
      <y>21</y>
      <w>42</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;70.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>1190</y>
      <w>21</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>462</x>
      <y>1190</y>
      <w>21</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=.&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>455</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>882</x>
      <y>714</y>
      <w>21</w>
      <h>602</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;840.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>497</x>
      <y>266</y>
      <w>21</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>644</x>
      <y>413</y>
      <w>112</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>665</x>
      <y>1120</y>
      <w>112</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0;140.0;260.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>406</x>
      <y>490</y>
      <w>266</w>
      <h>707</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
FestoProcessAccess
--
- FestoProcessImage* process;
- FILE* logFile;
- time_t timeCounter;
--
+ virtual bool isItemAtBeginning(void) = 0;
+ virtual bool isItemAtHightSensor(void) = 0;
+ virtual bool isItemAtMetalDetector(void) = 0;
+ virtual bool isMetalDetected(void) = 0;
+ virtual bool isJunctionOpen(void) = 0;
+ virtual bool isItemAtSlide(void) = 0;
+ virtual bool hasItemPassedSlide(void) = 0;
+ virtual bool isItemAtEnd(void) = 0;
+ virtual bool isButtonStartPressed(void) = 0;
+ virtual bool isButtonStartPositiveEdge(void) = 0;
+ virtual bool isButtonStartNegativeEdge(void) = 0;
+ virtual bool isButtonStopPressed(void) = 0;
+ virtual bool isButtonResetPressed(void) = 0;
+ virtual bool isButtonEmergencyActive(void) = 0;
+ virtual unsigned short getHight() = 0;
+ virtual time_t timeCounter1s() = 0;
--
+ virtual void driveRight(void);
+ virtual void driveLeft(void);
+ virtual void driveSlowRight(void);
+ virtual void driveSlowLeft(void);
+ virtual void driveStop(void);
+ virtual void openJunction(void);
+ virtual void closeJunction(void);
+ virtual void lightGreenOn(void);
+ virtual void lightGreenOff(void);
+ virtual void lightYellowOn(void);
+ virtual void lightYellowOff(void);
+ virtual void lightRedOn(void);
+ virtual void lightRedOff(void);
+ virtual void turnLEDStartOn(void);
+ virtual void turnLEDStartOff(void);
+ virtual void turnLEDResetOn(void);
+ virtual void turnLEDResetOff(void);
+ virtual void turnLEDQ1On(void);
+ virtual void turnLEDQ1Off(void);
+ virtual void turnLEDQ2On(void);
+ virtual void turnLEDQ2Off(void);
+ virtual void turnAllOff(void);

+ virtual bool isItemAtBeginning(void);
+ virtual bool isItemAtHightSensor(void);
+ virtual bool isItemAtMetalDetector(void);
+ virtual bool isMetalDetected(void);
+ virtual bool isJunctionOpen(void);
+ virtual bool isItemAtSlide(void);
+ virtual bool hasItemPassedSlide(void);
+ virtual bool isItemAtEnd(void);
+ virtual bool isButtonStartPressed(void);
+ virtual bool isButtonStartPositiveEdge(void);
+ virtual bool isButtonStartNegativeEdge(void);
+ virtual bool isButtonStopPressed(void);
+ virtual bool isButtonResetPressed(void);
+ virtual bool isButtonEmergencyActive(void);
+ virtual unsigned short getHight();
+ virtual time_t timeCounter1s();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>322</y>
      <w>287</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>&lt;&lt;class&gt;&gt;
DefectDetector
--
- minHeight : unsigned short
- maxHeight : unsigned short 
--
+ DefectDetector(minH: unsigned short, maxH:unsigned short, 
logFilePath: const char*

+ ~DefectDetector()  
+ checkForDefects(currentHeight: unsigned short, 
metalDetected: bool) : DefectType
  
+ logDefect(defect: DefectType) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1176</x>
      <y>385</y>
      <w>21</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>28</x>
      <y>315</y>
      <w>98</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>Note.
pfeile zu processacces
Wert</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>847</x>
      <y>413</y>
      <w>63</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
</diagram>
